- modal, form and validation
	- model
		- DB to know what type to assign to column
		- template to generate html from it
		- validating input
		- define fields with following
			- strict validation rules using validators
			- human friendly field name(used while displaying error messages)
			- error messages
			- regex validaion for complex validation

	- modalform 
  	- uses the modal which helps in following ways
  		- generate form(html)(optional)
  			- can derive the definition of each field in generating correct html element with label and error message field
  		- validation
  			- can put extra validation logic like check email in database
  			- can define clean method for complex data cleaning
  			- if valid returns true on invoking is_valid on form's object to save data else redirects with error messages filled

	- view
  	- serve form
  		- get instance of modalform to generate form
  		- pass it to template(optional, you may use custom form but make sure you adhere to naming conventions of fields like name and id etc)
  		- render template
  		- user fills form with some html validations in place and submits it

  	-	validate
  		- on receiving submited form if it is invalid the form is redisplayed with error messages
  		- when valid the cleaned data is accessed for insertion into database

  	- save and oher actions
  		- when proper cleaned data set is ready save it to DB
  		- if anything else like sending mail is to be done, do it here

